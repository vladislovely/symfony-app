input {
	file {
        path => "/var/log/nginx/access_json.log" # путь до access логов Nginx
        codec => "json" # указываем формат лога
        type => 1 # указываем тип для удобства разграничения в блоке filter
    }

    file {
        path => "/var/log/nginx/error.log" # путь до error логов Nginx
        type => 2 # указываем тип для удобства разграничения в блоке filter
    }

    file {
        path => ["/var/log/*.json"] # путь до логов вашего Symfony проекта
        codec => "json" # указываем формат лога
        type => 3 # указываем тип для удобства разграничения в блоке filter

        start_position => "beginning"
        sincedb_path => "/dev/null"
        mode => "read"
        exit_after_read => "true"
        file_completed_action => "log"
        file_completed_log_path => "/dev/null"
    }
}
## Add your filters / logstash plugins configuration here

filter {
    if [type] == 1 {
        useragent {
          source => "user_agent"
          target => "useragent"
        }
    }

    mutate {
        add_field => {
            "is_static" => 0
        }
    }

    ruby {
        code => '
            url = event.get("uri")
            isStatic = 0
            if (url.index("/images/") or url.index("/css/") or url.index("/js/"))
                isStatic = 1
            end
            event.set("is_static", isStatic)

            ipVal = event.get("ip")
            if (ipVal.length > 0)
                ipIntVal = IPAddr.new(ipVal).to_i
                if (ipIntVal)
                    event.set("ip_integer", ipIntVal)
                end
            end
        '
    }

    mutate {
        remove_field => ["@version", "@timestamp", "log", "host", "datetime_local", "user_agent", "http_host", "created_at"]
        convert => {
            "datetime" =>"integer"
            "status" => "integer"
            "type" => "integer"
            "user_id" => "integer"
            "level" => "integer"
            "is_static" => "integer"
            "ip_integer" => "integer"
        }
    }
}

output {
	elasticsearch {
		hosts => "elasticsearch:9200"
		user => "logstash_internal"
		password => "${LOGSTASH_INTERNAL_PASSWORD}"
	}
}
